/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SieveQuestions,
  SieveQuestionsInterface,
} from "../SieveQuestions";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "verifierAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "nftGameAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "ipfsHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "answerHash",
        type: "bytes32",
      },
    ],
    name: "addQuestion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allQuestions",
    outputs: [
      {
        internalType: "bytes32",
        name: "ipfsQuestionHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "answerHash",
        type: "bytes32",
      },
      {
        internalType: "uint128",
        name: "askedTimes",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "correctAnswerTimes",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "id",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "rank",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
    ],
    name: "answerQuestion",
    outputs: [
      {
        internalType: "bool",
        name: "correct",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getQuestion",
    outputs: [
      {
        internalType: "bytes32",
        name: "ipfsLink",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "answerHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516110b63803806110b683398101604081905261002f91610086565b60038054610100600160a81b0319166101006001600160a01b0394851602179055600480546001600160a01b031916919092161790556100b8565b80516001600160a01b038116811461008157600080fd5b919050565b60008060408385031215610098578182fd5b6100a18361006a565b91506100af6020840161006a565b90509250929050565b610fef806100c76000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634968dc00146100515780635116c71914610079578063d29574741461018e578063eff38f92146101df575b600080fd5b61006461005f366004610ca8565b610202565b60405190151581526020015b60405180910390f35b61018c610087366004610d96565b600080546040805160c081018252948552602085019384528401828152606085018381526001600160801b038084166080880181815260a0890191825260018601875595805296517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56360049095029485015594517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56484015590519051908416600160801b9185168202177f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e565830155915193519383169390921602919091177f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56690910155565b005b6101a161019c366004610db7565b6105cd565b6040805196875260208701959095526001600160801b03938416948601949094529082166060850152811660808401521660a082015260c001610070565b6101e7610625565b60408051938452602084019290925290820152606001610070565b3360009081526002602090815260408083205460035482519384019092526001805491936101009093046001600160a01b0316926343753b4d92899289928992909182918990811061026457634e487b7160e01b600052603260045260246000fd5b90600052602060002090600402016001015460001c8152506040518563ffffffff1660e01b815260040161029b9493929190610df8565b60206040518083038186803b1580156102b357600080fd5b505afa1580156102c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102eb9190610d3a565b60048054604051621f637b60ea1b8152339281019290925282151560248301529193506001600160a01b0390911690637d8dec00906044016040805180830381600087803b15801561033c57600080fd5b505af1158015610350573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103749190610d54565b505081156103f4576001818154811061039d57634e487b7160e01b600052603260045260246000fd5b600091825260209091206004909102016002018054600160801b90046001600160801b03169060106103ce83610f37565b91906101000a8154816001600160801b0302191690836001600160801b03160217905550505b600a6001828154811061041757634e487b7160e01b600052603260045260246000fd5b60009182526020909120600260049092020101546001600160801b031611156105b55760006001828154811061045d57634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160020160009054906101000a90046001600160801b0316600183815481106104a357634e487b7160e01b600052603260045260246000fd5b60009182526020909120600490910201600201546104d490600160801b90046001600160801b0316620f4240610ef1565b6104de9190610ecb565b6001600160801b0316905060006104f882620b71b0610759565b905061c350811015610558576105536001848154811061052857634e487b7160e01b600052603260045260246000fd5b6000918252602090912060049091020160030154600160801b90046001600160801b03166001610782565b6105b2565b620249f08111156105b2576105b26001848154811061058757634e487b7160e01b600052603260045260246000fd5b6000918252602090912060049091020160030154600160801b90046001600160801b031660016109d6565b50505b50336000908152600260205260408120559392505050565b600181815481106105dd57600080fd5b60009182526020909120600490910201805460018201546002830154600390930154919350916001600160801b0380821692600160801b928390048216928183169291041686565b60008054819081908161063982600c610f79565b90506000818154811061065c57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600402016000015494506000818154811061069157634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600101549350600081815481106106c657634e487b7160e01b600052603260045260246000fd5b6000918252602082206003600490920201015481546001600160801b0390911694508290811061070657634e487b7160e01b600052603260045260246000fd5b60009182526020822060026004909202010180546001600160801b03169161072d83610f37565b91906101000a8154816001600160801b0302191690836001600160801b03160217905550505050909192565b60008183116107715761076c8383610f20565b61077b565b61077b8284610f20565b9392505050565b81811161078f5780610791565b815b905060005b818110156109d157600080826107ad600187610f20565b6107b79190610f20565b815481106107d557634e487b7160e01b600052603260045260246000fd5b600091825260208083206040805160c08101825260049094029091018054845260018101549284019290925260028201546001600160801b0380821692850192909252600160801b90819004821660608501526003909201548082166080850152919091041660a0820152915061084c8386610f20565b8154811061086a57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600402016000836001876108889190610f20565b6108929190610f20565b815481106108b057634e487b7160e01b600052603260045260246000fd5b6000918252602082208354600490920201908155600180840154908201556002808401805491830180546001600160801b03199081166001600160801b0394851690811783559254600160801b9081900485168102909317909155600395860180549690940180549091169583169586178155925481900490911602909217909155819061093e8487610f20565b8154811061095c57634e487b7160e01b600052603260045260246000fd5b6000918252602091829020835160049290920201908155908201516001820155604082015160608301516001600160801b03918216600160801b9183168202176002840155608084015160a09094015193821693909116029190911760039091015550806109c981610f5e565b915050610796565b505050565b6000546109e4908390610f20565b81116109f057806109fe565b6000546109fe908390610f20565b905060005b818110156109d15760008082610a1a866001610eb3565b610a249190610eb3565b81548110610a4257634e487b7160e01b600052603260045260246000fd5b600091825260208083206040805160c08101825260049094029091018054845260018101549284019290925260028201546001600160801b0380821692850192909252600160801b90819004821660608501526003909201548082166080850152919091041660a08201529150610ab98386610eb3565b81548110610ad757634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600083866001610af59190610eb3565b610aff9190610eb3565b81548110610b1d57634e487b7160e01b600052603260045260246000fd5b6000918252602082208354600490920201908155600180840154908201556002808401805491830180546001600160801b03199081166001600160801b0394851690811783559254600160801b90819004851681029093179091556003958601805496909401805490911695831695861781559254819004909116029092179091558190610bab8487610eb3565b81548110610bc957634e487b7160e01b600052603260045260246000fd5b6000918252602091829020835160049290920201908155908201516001820155604082015160608301516001600160801b03918216600160801b9183168202176002840155608084015160a0909401519382169390911602919091176003909101555080610c3681610f5e565b915050610a03565b600082601f830112610c4e578081fd5b610c56610e7c565b808385604086011115610c67578384fd5b835b6002811015610c88578135845260209384019390910190600101610c69565b509095945050505050565b80518015158114610ca357600080fd5b919050565b60008060006101008486031215610cbd578283fd5b610cc78585610c3e565b9250604085605f860112610cd9578283fd5b610ce1610e7c565b8082870160c0880189811115610cf5578687fd5b865b6002811015610d1e57610d0a8b84610c3e565b855260209094019391850191600101610cf7565b50829650610d2c8a82610c3e565b955050505050509250925092565b600060208284031215610d4b578081fd5b61077b82610c93565b60008060408385031215610d66578182fd5b610d6f83610c93565b60208401519092506001600160a01b0381168114610d8b578182fd5b809150509250929050565b60008060408385031215610da8578182fd5b50508035926020909101359150565b600060208284031215610dc8578081fd5b5035919050565b8060005b6002811015610df2578151845260209384019390910190600101610dd3565b50505050565b6101208101610e078287610dcf565b60408083018660005b6002811015610e3757610e24838351610dcf565b9183019160209190910190600101610e10565b50505050610e4860c0830185610dcf565b61010082018360005b6001811015610e70578151835260209283019290910190600101610e51565b50505095945050505050565b6040805190810167ffffffffffffffff81118282101715610ead57634e487b7160e01b600052604160045260246000fd5b60405290565b60008219821115610ec657610ec6610f8d565b500190565b60006001600160801b0380841680610ee557610ee5610fa3565b92169190910492915050565b60006001600160801b0380831681851681830481118215151615610f1757610f17610f8d565b02949350505050565b600082821015610f3257610f32610f8d565b500390565b60006001600160801b0380831681811415610f5457610f54610f8d565b6001019392505050565b6000600019821415610f7257610f72610f8d565b5060010190565b600082610f8857610f88610fa3565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea26469706673582212204060b7aeb7ad6655ef47fe738037fcc3ee3843159de19aec9b419a6a5121451d64736f6c63430008040033";

export class SieveQuestions__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    verifierAddress: string,
    nftGameAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SieveQuestions> {
    return super.deploy(
      verifierAddress,
      nftGameAddress,
      overrides || {}
    ) as Promise<SieveQuestions>;
  }
  getDeployTransaction(
    verifierAddress: string,
    nftGameAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      verifierAddress,
      nftGameAddress,
      overrides || {}
    );
  }
  attach(address: string): SieveQuestions {
    return super.attach(address) as SieveQuestions;
  }
  connect(signer: Signer): SieveQuestions__factory {
    return super.connect(signer) as SieveQuestions__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SieveQuestionsInterface {
    return new utils.Interface(_abi) as SieveQuestionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SieveQuestions {
    return new Contract(address, _abi, signerOrProvider) as SieveQuestions;
  }
}
