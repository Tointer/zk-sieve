/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Governable, GovernableInterface } from "../Governable";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "GovernanceContractAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "GovernanceContractRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "addGovernor",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "governanceContracts",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "removeGovernor",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a33610029565b61002333610079565b50610159565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080546001600160a01b031633146100d85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b6001600160a01b03821660009081526001602052604090205460ff16610154576001600160a01b038216600081815260016020818152604092839020805460ff191690921790915590519182527fc8b076565c11e989d811cc9ebc33f3fc9d6a635f402f80ca900c7c126ba88748910160405180910390a15060015b919050565b61040a806101686000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633c4a25d01461006757806350500a8a1461008f578063715018a6146100b25780638da5cb5b146100bc578063eecdac88146100d7578063f2fde38b146100ea575b600080fd5b61007a610075366004610371565b6100fd565b60405190151581526020015b60405180910390f35b61007a61009d366004610371565b60016020526000908152604090205460ff1681565b6100ba6101b3565b005b6000546040516001600160a01b039091168152602001610086565b61007a6100e5366004610371565b6101e9565b6100ba6100f8366004610371565b610286565b600080546001600160a01b031633146101315760405162461bcd60e51b81526004016101289061039f565b60405180910390fd5b6001600160a01b03821660009081526001602052604090205460ff166101ae576001600160a01b038216600081815260016020818152604092839020805460ff191690921790915590519182527fc8b076565c11e989d811cc9ebc33f3fc9d6a635f402f80ca900c7c126ba8874891015b60405180910390a15060015b919050565b6000546001600160a01b031633146101dd5760405162461bcd60e51b81526004016101289061039f565b6101e76000610321565b565b600080546001600160a01b031633146102145760405162461bcd60e51b81526004016101289061039f565b6001600160a01b03821660009081526001602052604090205460ff16156101ae576001600160a01b038216600081815260016020908152604091829020805460ff1916905590519182527f6143afc7a354e1ab1c3f52714297bfe2a0958df8cd9e15f84953a51264bb52bc91016101a2565b6000546001600160a01b031633146102b05760405162461bcd60e51b81526004016101289061039f565b6001600160a01b0381166103155760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610128565b61031e81610321565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610382578081fd5b81356001600160a01b0381168114610398578182fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212205ffcc0c950ca7af39505161077e90daded6eb8629fed6b8ac3cf5a8a07dd65bb64736f6c63430008040033";

export class Governable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Governable> {
    return super.deploy(overrides || {}) as Promise<Governable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Governable {
    return super.attach(address) as Governable;
  }
  connect(signer: Signer): Governable__factory {
    return super.connect(signer) as Governable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernableInterface {
    return new utils.Interface(_abi) as GovernableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Governable {
    return new Contract(address, _abi, signerOrProvider) as Governable;
  }
}
